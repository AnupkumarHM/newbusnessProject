{"ast":null,"code":"import axios from 'axios';\nconst API_BASE_URL = 'http://localhost:5000/api';\nconst fetchUsers = async () => {\n  const response = await axios.get(`${API_BASE_URL}/users/user`);\n  return response.data;\n};\nconst generateInvoice = async invoiceData => {\n  const response = await axios.post(`${API_BASE_URL}/invoices/generate`, invoiceData);\n  return response.data.pdfBuffer;\n};\n// const generateInvoice = async (invoiceData) => {\n//   const response = await axios.post(`${API_BASE_URL}/invoices/generate`, invoiceData);\n//   console.log(response.data)\n\n//   return response.data;\n// };\nconst registerUser = async userData => {\n  const response = await axios.post(`${API_BASE_URL}/users/register`, userData);\n  return response.data;\n};\nconst Logging = async userData => {\n  const response = await axios.post(`${API_BASE_URL}/users/login`, userData);\n  return response.data;\n};\n_c = Logging;\nconst downloadInvoice = async invoiceData => {\n  try {\n    const pdfBlob = await generateInvoice(invoiceData);\n    console.log(pdfBlob.data);\n    const binaryPdfData = new Uint8Array(pdfBlob.data);\n    // Create a Blob URL\n    const url = window.URL.createObjectURL(new Blob([binaryPdfData], {\n      type: 'application/pdf'\n    }));\n\n    // Create a link element and trigger download\n    const link = document.createElement('a');\n    link.href = url;\n    link.setAttribute('download', 'invoice.pdf');\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n  } catch (error) {\n    console.error('Error downloading invoice:', error);\n  }\n};\nexport default {\n  fetchUsers,\n  generateInvoice,\n  downloadInvoice,\n  registerUser,\n  Logging\n};\nvar _c;\n$RefreshReg$(_c, \"Logging\");","map":{"version":3,"names":["axios","API_BASE_URL","fetchUsers","response","get","data","generateInvoice","invoiceData","post","pdfBuffer","registerUser","userData","Logging","_c","downloadInvoice","pdfBlob","console","log","binaryPdfData","Uint8Array","url","window","URL","createObjectURL","Blob","type","link","document","createElement","href","setAttribute","body","appendChild","click","removeChild","error","$RefreshReg$"],"sources":["/mnt/c/Users/anupa/OneDrive/Desktop/react/assignment/frountand/src/services/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_BASE_URL = 'http://localhost:5000/api';\r\n\r\nconst fetchUsers = async () => {\r\n  const response = await axios.get(`${API_BASE_URL}/users/user`);\r\n  \r\n  return response.data;\r\n\r\n};\r\nconst generateInvoice = async (invoiceData) => {\r\n    const response = await axios.post(`${API_BASE_URL}/invoices/generate`, invoiceData);\r\n  \r\n    return response.data.pdfBuffer;\r\n  };\r\n// const generateInvoice = async (invoiceData) => {\r\n//   const response = await axios.post(`${API_BASE_URL}/invoices/generate`, invoiceData);\r\n//   console.log(response.data)\r\n\r\n//   return response.data;\r\n// };\r\nconst registerUser = async (userData) => {\r\n    const response = await axios.post(`${API_BASE_URL}/users/register`, userData);\r\n    return response.data;\r\n  };\r\n  const Logging = async (userData) => {\r\n    const response = await axios.post(`${API_BASE_URL}/users/login`, userData);\r\n    return response.data;\r\n  };\r\n  const downloadInvoice = async (invoiceData) => {\r\n    try {\r\n      const pdfBlob = await generateInvoice(invoiceData);\r\n      console.log(pdfBlob.data)\r\n      const binaryPdfData = new Uint8Array(pdfBlob.data); \r\n      // Create a Blob URL\r\n      const url = window.URL.createObjectURL(new Blob([binaryPdfData], { type: 'application/pdf' }));\r\n      \r\n      // Create a link element and trigger download\r\n      const link = document.createElement('a');\r\n      link.href = url;\r\n      link.setAttribute('download', 'invoice.pdf');\r\n      document.body.appendChild(link);\r\n      link.click();\r\n      document.body.removeChild(link);\r\n    } catch (error) {\r\n      console.error('Error downloading invoice:', error);\r\n    }\r\n  };\r\n  \r\n\r\nexport default {\r\n  fetchUsers,\r\n  generateInvoice,\r\n  downloadInvoice,\r\n  registerUser,\r\n  Logging\r\n};\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,YAAY,GAAG,2BAA2B;AAEhD,MAAMC,UAAU,GAAG,MAAAA,CAAA,KAAY;EAC7B,MAAMC,QAAQ,GAAG,MAAMH,KAAK,CAACI,GAAG,CAAC,GAAGH,YAAY,aAAa,CAAC;EAE9D,OAAOE,QAAQ,CAACE,IAAI;AAEtB,CAAC;AACD,MAAMC,eAAe,GAAG,MAAOC,WAAW,IAAK;EAC3C,MAAMJ,QAAQ,GAAG,MAAMH,KAAK,CAACQ,IAAI,CAAC,GAAGP,YAAY,oBAAoB,EAAEM,WAAW,CAAC;EAEnF,OAAOJ,QAAQ,CAACE,IAAI,CAACI,SAAS;AAChC,CAAC;AACH;AACA;AACA;;AAEA;AACA;AACA,MAAMC,YAAY,GAAG,MAAOC,QAAQ,IAAK;EACrC,MAAMR,QAAQ,GAAG,MAAMH,KAAK,CAACQ,IAAI,CAAC,GAAGP,YAAY,iBAAiB,EAAEU,QAAQ,CAAC;EAC7E,OAAOR,QAAQ,CAACE,IAAI;AACtB,CAAC;AACD,MAAMO,OAAO,GAAG,MAAOD,QAAQ,IAAK;EAClC,MAAMR,QAAQ,GAAG,MAAMH,KAAK,CAACQ,IAAI,CAAC,GAAGP,YAAY,cAAc,EAAEU,QAAQ,CAAC;EAC1E,OAAOR,QAAQ,CAACE,IAAI;AACtB,CAAC;AAACQ,EAAA,GAHID,OAAO;AAIb,MAAME,eAAe,GAAG,MAAOP,WAAW,IAAK;EAC7C,IAAI;IACF,MAAMQ,OAAO,GAAG,MAAMT,eAAe,CAACC,WAAW,CAAC;IAClDS,OAAO,CAACC,GAAG,CAACF,OAAO,CAACV,IAAI,CAAC;IACzB,MAAMa,aAAa,GAAG,IAAIC,UAAU,CAACJ,OAAO,CAACV,IAAI,CAAC;IAClD;IACA,MAAMe,GAAG,GAAGC,MAAM,CAACC,GAAG,CAACC,eAAe,CAAC,IAAIC,IAAI,CAAC,CAACN,aAAa,CAAC,EAAE;MAAEO,IAAI,EAAE;IAAkB,CAAC,CAAC,CAAC;;IAE9F;IACA,MAAMC,IAAI,GAAGC,QAAQ,CAACC,aAAa,CAAC,GAAG,CAAC;IACxCF,IAAI,CAACG,IAAI,GAAGT,GAAG;IACfM,IAAI,CAACI,YAAY,CAAC,UAAU,EAAE,aAAa,CAAC;IAC5CH,QAAQ,CAACI,IAAI,CAACC,WAAW,CAACN,IAAI,CAAC;IAC/BA,IAAI,CAACO,KAAK,CAAC,CAAC;IACZN,QAAQ,CAACI,IAAI,CAACG,WAAW,CAACR,IAAI,CAAC;EACjC,CAAC,CAAC,OAAOS,KAAK,EAAE;IACdnB,OAAO,CAACmB,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;EACpD;AACF,CAAC;AAGH,eAAe;EACbjC,UAAU;EACVI,eAAe;EACfQ,eAAe;EACfJ,YAAY;EACZE;AACF,CAAC;AAAC,IAAAC,EAAA;AAAAuB,YAAA,CAAAvB,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}