{"ast":null,"code":"import axios from 'axios';\nconst API_BASE_URL = 'http://localhost:5000/api';\nconst fetchUsers = async () => {\n  const response = await axios.get(`${API_BASE_URL}/users/user`);\n  return response.data;\n};\n\n// const generateInvoice = async (invoiceData) => {\n//   const response = await axios.post(`${API_BASE_URL}/invoices/generate`, invoiceData);\n//   console.log(response.data)\n\n//   return response.data.pdfBase64;\n// };\nconst registerUser = async userData => {\n  const response = await axios.post(`${API_BASE_URL}/users/register`, userData);\n  return response.data;\n};\nconst Logging = async userData => {\n  const response = await axios.post(`${API_BASE_URL}/users/login`, userData);\n  return response.data;\n};\n_c = Logging;\nconst generateInvoice = async invoiceData => {\n  try {\n    const response = await axios.post(`${API_BASE_URL}/invoices/generate`, invoiceData, {\n      responseType: 'blob' // This is important to handle binary data\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Error generating invoice:', error);\n    throw error;\n  }\n};\nconst downloadInvoice = async invoiceData => {\n  try {\n    const pdfBlob = await generateInvoice(invoiceData);\n    const url = window.URL.createObjectURL(new Blob([pdfBlob], {\n      type: 'application/pdf'\n    }));\n    const link = document.createElement('a');\n    link.href = url;\n    link.setAttribute('download', 'invoice.pdf');\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n  } catch (error) {\n    console.error('Error downloading invoice:', error);\n  }\n};\nexport default {\n  fetchUsers,\n  generateInvoice,\n  downloadInvoice,\n  registerUser,\n  Logging\n};\nvar _c;\n$RefreshReg$(_c, \"Logging\");","map":{"version":3,"names":["axios","API_BASE_URL","fetchUsers","response","get","data","registerUser","userData","post","Logging","_c","generateInvoice","invoiceData","responseType","error","console","downloadInvoice","pdfBlob","url","window","URL","createObjectURL","Blob","type","link","document","createElement","href","setAttribute","body","appendChild","click","removeChild","$RefreshReg$"],"sources":["/mnt/c/Users/anupa/OneDrive/Desktop/react/assignment/frountand/src/services/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_BASE_URL = 'http://localhost:5000/api';\r\n\r\nconst fetchUsers = async () => {\r\n  const response = await axios.get(`${API_BASE_URL}/users/user`);\r\n  return response.data;\r\n};\r\n\r\n// const generateInvoice = async (invoiceData) => {\r\n//   const response = await axios.post(`${API_BASE_URL}/invoices/generate`, invoiceData);\r\n//   console.log(response.data)\r\n\r\n//   return response.data.pdfBase64;\r\n// };\r\nconst registerUser = async (userData) => {\r\n    const response = await axios.post(`${API_BASE_URL}/users/register`, userData);\r\n    return response.data;\r\n  };\r\n  const Logging = async (userData) => {\r\n    const response = await axios.post(`${API_BASE_URL}/users/login`, userData);\r\n    return response.data;\r\n  };\r\n  const generateInvoice = async (invoiceData) => {\r\n    try {\r\n      const response = await axios.post(`${API_BASE_URL}/invoices/generate`, invoiceData, {\r\n        responseType: 'blob', // This is important to handle binary data\r\n      });\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Error generating invoice:', error);\r\n      throw error;\r\n    }\r\n  };\r\n  \r\n  const downloadInvoice = async (invoiceData) => {\r\n    try {\r\n      const pdfBlob = await generateInvoice(invoiceData);\r\n      const url = window.URL.createObjectURL(new Blob([pdfBlob], { type: 'application/pdf' }));\r\n      const link = document.createElement('a');\r\n      link.href = url;\r\n      link.setAttribute('download', 'invoice.pdf');\r\n      document.body.appendChild(link);\r\n      link.click();\r\n      document.body.removeChild(link);\r\n    } catch (error) {\r\n      console.error('Error downloading invoice:', error);\r\n    }\r\n  };\r\n  \r\n\r\nexport default {\r\n  fetchUsers,\r\n  generateInvoice,\r\n  downloadInvoice,\r\n  registerUser,\r\n  Logging\r\n};\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,YAAY,GAAG,2BAA2B;AAEhD,MAAMC,UAAU,GAAG,MAAAA,CAAA,KAAY;EAC7B,MAAMC,QAAQ,GAAG,MAAMH,KAAK,CAACI,GAAG,CAAC,GAAGH,YAAY,aAAa,CAAC;EAC9D,OAAOE,QAAQ,CAACE,IAAI;AACtB,CAAC;;AAED;AACA;AACA;;AAEA;AACA;AACA,MAAMC,YAAY,GAAG,MAAOC,QAAQ,IAAK;EACrC,MAAMJ,QAAQ,GAAG,MAAMH,KAAK,CAACQ,IAAI,CAAC,GAAGP,YAAY,iBAAiB,EAAEM,QAAQ,CAAC;EAC7E,OAAOJ,QAAQ,CAACE,IAAI;AACtB,CAAC;AACD,MAAMI,OAAO,GAAG,MAAOF,QAAQ,IAAK;EAClC,MAAMJ,QAAQ,GAAG,MAAMH,KAAK,CAACQ,IAAI,CAAC,GAAGP,YAAY,cAAc,EAAEM,QAAQ,CAAC;EAC1E,OAAOJ,QAAQ,CAACE,IAAI;AACtB,CAAC;AAACK,EAAA,GAHID,OAAO;AAIb,MAAME,eAAe,GAAG,MAAOC,WAAW,IAAK;EAC7C,IAAI;IACF,MAAMT,QAAQ,GAAG,MAAMH,KAAK,CAACQ,IAAI,CAAC,GAAGP,YAAY,oBAAoB,EAAEW,WAAW,EAAE;MAClFC,YAAY,EAAE,MAAM,CAAE;IACxB,CAAC,CAAC;IACF,OAAOV,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOS,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;IACjD,MAAMA,KAAK;EACb;AACF,CAAC;AAED,MAAME,eAAe,GAAG,MAAOJ,WAAW,IAAK;EAC7C,IAAI;IACF,MAAMK,OAAO,GAAG,MAAMN,eAAe,CAACC,WAAW,CAAC;IAClD,MAAMM,GAAG,GAAGC,MAAM,CAACC,GAAG,CAACC,eAAe,CAAC,IAAIC,IAAI,CAAC,CAACL,OAAO,CAAC,EAAE;MAAEM,IAAI,EAAE;IAAkB,CAAC,CAAC,CAAC;IACxF,MAAMC,IAAI,GAAGC,QAAQ,CAACC,aAAa,CAAC,GAAG,CAAC;IACxCF,IAAI,CAACG,IAAI,GAAGT,GAAG;IACfM,IAAI,CAACI,YAAY,CAAC,UAAU,EAAE,aAAa,CAAC;IAC5CH,QAAQ,CAACI,IAAI,CAACC,WAAW,CAACN,IAAI,CAAC;IAC/BA,IAAI,CAACO,KAAK,CAAC,CAAC;IACZN,QAAQ,CAACI,IAAI,CAACG,WAAW,CAACR,IAAI,CAAC;EACjC,CAAC,CAAC,OAAOV,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;EACpD;AACF,CAAC;AAGH,eAAe;EACbZ,UAAU;EACVS,eAAe;EACfK,eAAe;EACfV,YAAY;EACZG;AACF,CAAC;AAAC,IAAAC,EAAA;AAAAuB,YAAA,CAAAvB,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}